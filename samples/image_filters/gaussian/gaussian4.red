Red [	Title:   "Gaussian Blur"	Author:  "ldci"	File: 	 %gaussian4.red	Needs:	 'View]; required libs#include %../../../libs/tools/rcvTools.red#include %../../../libs/core/rcvCore.red#include %../../../libs/matrix/rcvMatrix.red#include %../../../libs/imgproc/rcvImgProc.redknl: [		0.0 0.0 1.0 1.0 1.0 0.0 0.0		0.0 1.0 1.0 1.0 1.0 1.0 0.0		1.0 1.0 -1.0 -1.0 -1.0 1.0 1.0		1.0 1.0 -1.0 -8.0 -1.0 1.0 1.0		1.0 1.0 -1.0 -1.0 -1.0 1.0 1.0		0.0 1.0 1.0 1.0 1.0 1.0 0.0		0.0 0.0 1.0 1.0 1.0 0.0 0.0	]margins: 10x10defSize: 512x512iSize: 0x0img1: rcvCreateImage defSizedst:  rcvCreateImage defSizegray: rcvCreateImage defSizecurrentImage:  rcvCreateImage defSizeisFile: falseparam: 3loadImage: does [    isFile: false	canvas/image/rgb: black	tmp: request-file	if not none? tmp [		fileName: to string! to-file tmp		win/text: copy "Gaussian Blur "		append win/text fileName		img1: rcvLoadImage tmp		gray: rcvLoadImage/grayscale tmp		currentImage rcvCreateImage img1/size		either cb/data [currentImage: rcvCloneImage gray]					   [currentImage: rcvCloneImage img1]		dst:  rcvCloneImage currentImage		bb/image: img1		canvas/image: dst		iSize: currentImage/size		isFile: true		rcvFilter2D currentImage dst knl 1.0 0.0	]]; ***************** Test Program ****************************view win: layout [		title "Gaussian Blur"		origin margins space margins		button 60 "Load" 		[loadImage]			cb: check "Grayscale"	[								either cb/data [currentImage: rcvCloneImage gray]					   			[currentImage: rcvCloneImage img1]					   			rcvFilter2D currentImage dst knl 1.0 0.0 								]							button 60 "Quit" 		[rcvReleaseImage img1 								rcvReleaseImage gray								rcvReleaseImage currentImage								rcvReleaseImage dst Quit]		return		bb: base 128x128 img1		return		canvas: base 512x512 dst	]